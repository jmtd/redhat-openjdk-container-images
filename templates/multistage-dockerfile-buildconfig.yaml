---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Template to produce a light weight imagestream and buildconfig for a multistage build
  name: multistage-build-template
objects:
##############################################################################
# the INPUT ImageStream (from phase 2)
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: intermediate
  spec:
    lookupPolicy:
      local: true
    tags:
    - from:
        kind: DockerImage
        name: quay.io/jdowland/jlink:ubi9-jlinked-image
      name: latest
      referencePolicy:
        type: Local
##############################################################################
# the OUTPUT ImageStream
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: lightweight-image
  spec:
    lookupPolicy:
      local: false
##############################################################################
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata: 
    name: multistage-buildconfig
  spec:
    source:
      images:
      - from: 
          kind: ImageStreamTag
          name: intermediate:latest
        paths:
#       path does not exist in intermediate image, yet
#       - sourcePath:     /mnt/jrootfs
#         destinationDir: jrootfs
        - sourcePath:     /deployments
          destinationDir: deployments
        - sourcePath:     /tmp/jre/.
          destinationDir: customJVM
        - sourcePath:     /opt/jboss/container/.
          destinationDir: runScripts
      type: Dockerfile
      dockerfile: |
        FROM registry.access.redhat.com/ubi9/ubi-micro
        ARG JAVA_HOME=/usr/lib/jvm/java

        #COPY jrootfs/    /
        COPY deployments /
        COPY customJVM   ${JAVA_HOME}
        COPY runScripts  /opt/jboss/container/
        # these are in the micro image
        RUN rm -rf /var/lib/dnf /var/lib/rpm

        ENV JAVA_HOME="${JAVA_HOME}" PATH="${JAVA_HOME}/bin:$PATH"
        USER 185
        CMD /opt/jboss/container/java/run/run-java.sh
    strategy:
      type: Docker
    output:
      to:
        kind: ImageStreamTag
        name: lightweight-image:latest  # Tag for the final output image
    triggers:
      - type: ConfigChange
